@inherits CmsPageBase

@page "/settings"

<PageTitle>Settings - @Cms.System?.SystemName</PageTitle>

@if (CurrentPage is { LoginInfo.IsLogged: true })
{
    <div id="settings-header" class="content-item header-center width75">
        <h1>Settings <Icon Name="settings" /></h1>

        @if (IsLoggedIn(Role.Admin))
        {
            <div class="content-item-2 header-center">
                <h2 class="standard-margin">Admin <Icon Name="engineering" /></h2>
                <div class="settings-options-container">

                    <NavigationItem Text="Change logo"
                            IconName="image"
                            UriPath="/admin/change-logo" />

                    <NavigationItem Text="Change colors"
                            IconName="palette"
                            UriPath="/admin/change-colors" />

                    <NavigationItem Text="Edit CMS settings"
                            IconName="edit"
                            UriPath="/admin/cms-settings" />

                    <NavigationItem Text="Edit Terms of Service"
                            IconName="edit"
                            UriPath="/admin/edit-tos" />

                    <NavigationItem Text="Edit users"
                            IconName="edit"
                            UriPath="/admin/edit-users" />

                    <NavigationItem Text="Edit contact"
                            IconName="edit"
                            UriPath="/admin/edit-contact" />

                    <NavigationItem Text="Send email"
                            IconName="email"
                            UriPath="/admin/send-email" />

                    <NavigationItem Text="Edit allowed phone numbers"
                            IconName="call"
                            UriPath="/admin/edit-phones" />

                </div>
            </div>
        }

        @if (IsLoggedIn(Role.Moderator))
        {
            <div class="content-item-2 header-center">
                <h2>Moderator <Icon Name="manage_accounts" /></h2>
                <div class="settings-options-container">

                    <NavigationItem Text="Check Reports"
                            IconName="search"
                            UriPath="/moderator/check-reports" />

                    <NavigationItem Text="Ban user"
                            IconName="person_off"
                            UriPath="/moderator/ban-user" />

                    <NavigationItem Text="Unban user"
                            IconName="person"
                            UriPath="/moderator/unban-user" />

                </div>
            </div>
        }

        @if (IsLoggedIn(Role.FactChecker))
        {
            <div class="content-item-2 header-center">
                <h2>Fact checker <Icon Name="person_search" /></h2>
                <div class="settings-options-container">

                    <NavigationItem Text="Check Reports"
                            IconName="search"
                            UriPath="/fact-checker/check-reports" />

                    <NavigationItem Text="New Fact"
                            IconName="add_box"
                            UriPath="/fact-checker/new-fact" />

                    <NavigationItem Text="Delete Fact"
                            IconName="delete"
                            UriPath="/fact-checker/delete-fact" />

                </div>
            </div>
        }

        @if (IsLoggedIn(Role.User))
        {
            <div class="content-item-2 header-center">
                <h2>User <Icon Name="person" /></h2>
                <div class="settings-options-container">

                    <NavigationItem Text="Change avatar"
                            IconName="image"
                            UriPath="/user/change-avatar" />

                    <NavigationItem Text="Change password"
                            IconName="edit_square"
                            UriPath="/user/change-password" />

                    @if (Cms.Auth?.Type is AuthType.Email or AuthType.EmailAndSms)
                    {
                        <NavigationItem Text="Change email"
                            IconName="mail"
                            UriPath="/user/change-email" />
                    }


                    @if (Cms.Auth?.Type is AuthType.Sms or AuthType.EmailAndSms)
                    {
                        <NavigationItem Text="Change phone"
                            IconName="call"
                            UriPath="/user/change-phone" />
                    }

                    <NavigationItem Text="Login History"
                            IconName="history"
                            UriPath="/user/sessions" />

                    <NavigationItem Text="Delete account"
                            IconName="delete"
                            UriPath="javascript:void(0)" 
                            @onclick="@DeleteAccount" />

                </div>
            </div>
        }
    </div>
}

@code {

    private async Task DeleteAccount()
    {
        var confirmation = Modal.Show<Modals.ConfirmModal>("");
        var confirmationResult = await confirmation.Result;

        if (confirmationResult.Cancelled)
        {
            return;
        }

        var deleteAccount = await UserModel.Delete(CurrentPage?.LoginInfo.AccessToken);

        if (deleteAccount.Status.Equals(false))
        {
            await Error();
            return;
        }

        if (deleteAccount.Result is List<string>)
        {
            List<string> filesToDelete = (List<string>)deleteAccount.Result;
            foreach (var file in filesToDelete)
            {
                try
                {
                    File.Delete(Path.Combine("wwwroot/img", file));
                }
                catch (Exception e)
                {
                    Console.WriteLine(e.Message);
                }
            }
        }

        await Logout();
    }
}