@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Cms = WebApp.Cms.Cms

@namespace WebApp.Pages.Core
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="@(CultureInfo.CurrentCulture.TwoLetterISOLanguageName)">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="~/" />
    <link href="WebApp.styles.css" rel="stylesheet" />

    <link href="css/pico.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />

     <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css" integrity="sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=" crossorigin="" /> 
     <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" integrity="sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=" crossorigin=""></script> 

    <link href="css/app.css" rel="stylesheet" />
    <link href="css/app.mobile.css" rel="stylesheet" />

    @if (Cms.System?.MainColor != null && Cms.System?.MainColorFont != null)
    {
        <style>
            :root {
                --cms-color-main: @Cms.System.MainColor;
                --cms-font-main: @Cms.System.MainColorFont;
            }
        </style>
    }

    <component type="typeof(HeadOutlet)" render-mode="ServerPrerendered" />
</head>
<body>
    @RenderBody()

    @if (Cms.ReCaptcha != null && Cms.ReCaptcha.ReCaptchaEnabled)
    {
        <script src=@($"https://www.google.com/recaptcha/api.js?render=" +
                      $"{Cms.ReCaptcha.ReCaptchaPublicKey}")></script>
        <script>
            function GetReCaptchaToken() {
                grecaptcha.ready(function () {
                    grecaptcha.execute('@Cms.ReCaptcha.ReCaptchaPublicKey', { action: 'submit' }).then(function (token) {
                        var tokenInput = document.getElementById("recaptcha-token-input");
                        tokenInput.value = token;
                        tokenInput.dispatchEvent(new Event("change"));
                    });
                });
            }
        </script>
    }

    <script src="js/app.js"></script>
    <script src="_framework/blazor.server.js"></script>
</body>
</html>
