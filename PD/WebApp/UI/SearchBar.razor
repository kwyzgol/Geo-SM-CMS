@inherits CmsComponentBase

@if (IsLoggedIn() || IsNotLoggedIn())
{
    <div class="center-content" id="search-bar">
        <form onsubmit="@Search">

            <span class="one-row">
                <input @bind="@_searchedValue"
                       Placeholder="@(Type == SearchType.All ? "Search for a post, @user or #tag.": "")"
                       disabled="@_isSearching"
                       type="search"
                       class="search-input" />
                <button class="search-button"
                        type="submit"
                        disabled="@_isSearching">
                    Search
                </button>
            </span>

        </form>
    </div>
}

@code
{
    [Parameter]
    public CmsComponentBase? Parent { get; set; }

    [Parameter]
    public SearchType Type { get; set; } = SearchType.All;

    public SearchType? CurrentType { get; private set; } = null;
    public List<UserModel> SearchedUsers { get; set; } = new List<UserModel>();
    public List<string> SearchedTags { get; set; } = new List<string>();
    public List<PostModel> SearchedPosts { get; set; } = new List<PostModel>();

    private bool _isSearching = false;
    private string _searchedValue = "";

    public async Task Search()
    {
        SearchedUsers.Clear();
        SearchedTags.Clear();
        SearchedPosts.Clear();
        CurrentType = null;
        await InvokeAsync(StateHasChanged);

        if (string.IsNullOrWhiteSpace(_searchedValue))
        {
            return;
        }

        SearchType type = Type;
        string searchedValue = _searchedValue;

        searchedValue = searchedValue.Trim();

        if (type == SearchType.All)
        {
            if (searchedValue.StartsWith("@"))
            {
                type = SearchType.User;
                searchedValue = searchedValue.Substring(1);
            }
            else if (searchedValue.StartsWith("#"))
            {
                type = SearchType.Tag;
                searchedValue = searchedValue.Substring(1);
            }
            else type = SearchType.Post;
        }

        if (string.IsNullOrWhiteSpace(searchedValue))
        {
            return;
        }

        if (Cms.Databases == null)
        {
            await Error();
            return;
        }

        var search = await Cms.Databases.Search(type, searchedValue, CurrentPage?.LoginInfo.AccessToken);

        if (search.Status.Equals(false))
        {
            await Error();
        }
        else
        {
            if (search.Result is List<UserModel>)
            {
                SearchedUsers = (List<UserModel>)search.Result;
            }
            else if (search.Result is List<string>)
            {
                SearchedTags = (List<string>)search.Result;
            }
            else if (search.Result is List<PostModel>)
            {
                SearchedPosts = (List<PostModel>)search.Result;
            }
            else
            {
                await Error();
            }

            CurrentType = type;
            await InvokeAsync(StateHasChanged);
            if(Parent != null) await Parent.StateChangedAsync();
        }
    }
}
